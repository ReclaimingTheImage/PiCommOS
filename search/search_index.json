{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"build_from_source/","title":"Build PiCommOS from Source","text":""},{"location":"build_from_source/#requirements","title":"Requirements","text":"<ul> <li>Debian/Ubuntu Linux host or VM</li> <li>git, debootstrap, qemu-user-static, gpg</li> </ul>"},{"location":"build_from_source/#instructions","title":"Instructions","text":"<ol> <li> <p>Clone the repo:</p> <p>git clone https://github.com/ReclaimingTheImage/PiCommOS.git cd PiCommOS</p> </li> <li> <p>Run the build script:</p> <p>sudo ./build_image.sh</p> </li> <li> <p>Flash the resulting <code>.img</code> file using Balena Etcher.</p> </li> </ol>"},{"location":"networking_options/","title":"PiCommOS Networking Options","text":""},{"location":"networking_options/#supported","title":"Supported","text":"<ul> <li>WireGuard (recommended)</li> <li>Yggdrasil (mesh networking)</li> </ul>"},{"location":"networking_options/#config-values","title":"Config Values","text":"<p>In <code>config.cfg</code>:</p> <pre><code>vpn_type = wireguard\n# or\nvpn_type = yggdrasil\n</code></pre> <p>Ensure you have private keys prepared ahead of time.</p>"},{"location":"security_model/","title":"PiCommOS Security Model","text":"<p>PiCommOS is designed to be secure by default.</p>"},{"location":"security_model/#core-principles","title":"Core Principles","text":"<ul> <li>Full disk encryption (LUKS2)</li> <li>RAM wiped on shutdown</li> <li>No network traffic without verified VPN</li> <li>Messaging secured with post-quantum cryptography</li> </ul>"},{"location":"security_model/#threat-models","title":"Threat Models","text":"<ul> <li>Physical device theft</li> <li>Passive network surveillance</li> <li>Metadata analysis</li> <li>State-level actors</li> </ul> <p>Everything is locked down unless explicitly enabled by you.</p>"},{"location":"usb_config_example/","title":"Encrypted USB Config File Example","text":"<p>This file shows how to set up a USB config file for PiCommOS.</p>"},{"location":"usb_config_example/#steps","title":"Steps","text":"<ol> <li> <p>Decrypt the included <code>usb_config_template.cfg.gpg</code>:</p> <p>gpg -d usb_config_template.cfg.gpg &gt; config.cfg</p> </li> <li> <p>Edit <code>config.cfg</code> with your actual information:</p> <p>username = geostone vpn_type = wireguard wireguard_private_key =  messaging_keypair =  enable_dashboard = true   <li> <p>Re-encrypt the config:</p> <p>gpg -c config.cfg</p> </li> <li> <p>Save it to your USB stick as <code>usb_config.gpg</code></p> </li>"}]}